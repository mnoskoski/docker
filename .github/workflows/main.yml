name: Docker Build App
on:
  push:
    branches:
      - master
  #   paths:
  #     - app-nginx/**
  # pull_request:
  #   paths:
  #     - app-nginx/**
env:
  agentSO: ubuntu-latest
  NODE-VERSION: '14'
jobs:
  executeScripts:
    runs-on: ubuntu-latest
    steps:
      - name: HelloWorldWithDate
        run: echo "Hello World $(date)"
      - name: listDirectory
        run: ls -lah

  checkoutRepo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout boilerplate
        uses: actions/checkout@v2
        with:
          repository: 'odanieldcs/serverless-boilerplate'
          path: serverless-boilerplate

  DockerScanDockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: installDockerScan
        run: curl -L https://download.docker.com/linux/ubuntu/dists/hirsute/pool/stable/amd64/docker-scan-plugin_0.7.0~ubuntu-hirsute_amd64.deb -o docker-scan.deb      
      - name: installpackage
        run: sudo dpkg -i docker-scan.deb
      - name: testDirectory
        run: echo $(GITHUB_ACTION_PATH)
      - name: ExecuteDockerScan
        run: docker scan app-nginx/Dockerfile
      - name: testNpmAuditPackageJson
        run: npm --prefix $(pwd)/app-nodejs/node-js-sample run audit:fix

  DockerBuildAndTest:
    runs-on: ubuntu-latest
    needs: DockerScanDockerfile
    strategy:
      matrix:
        node-version: [$NODE-VERSION]
    steps:
      - uses: actions/checkout@v2
      - name: showVar
        run: echo ${{ matrix.node-version }}
      - name: DockerBuild - Node version ${{ matrix.node-version }}
        run: docker build app-nginx/ -t mnoskoski/nodesjs-simple
      - name: DockerRun
        run: docker run -it -d -p 8080:80 mnoskoski/nodesjs-simple
      - name: TestAccessApp
        run: curl -v http://localhost:8080
      - name: DockerComposeUp
        run: docker-compose -f app-nodejs/docker-compose.yaml up -d --build
      - name: testingExecution
        run: docker ps -a
      #- name: 'npm run'
      #  run: |
      #    npm run coverage

  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: 'http://mnoskoski.com'
    needs: DockerBuildAndTest
    steps:
      - name: DeployDev
        run: echo "deploy sucesso"
      
  deploy-hmg:
    runs-on: ubuntu-latest
    environment:
      name: hmg
      url: 'mnoskoski-hmg.com.br'
    needs: deploy-dev
    steps:
      - name: deployingHmg
        run: echo "deploy sucesso"

  deploy-prod:
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: 'mnoskoski-prod.com.br'
    needs: deploy-hmg
    steps:
      - name: deployingProd
        run: echo "deploy sucesso"

      